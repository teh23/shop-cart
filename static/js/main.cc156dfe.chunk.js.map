{"version":3,"sources":["lib/fetcher.ts","components/Stars.tsx","components/Product.tsx","components/Category.tsx","components/Header.tsx","components/Card.tsx","App.tsx","index.tsx"],"names":["fetcher","url","axios","get","then","res","data","Stars","rating","className","Product","category","description","id","image","price","title","dispatch","useCard","product","src","alt","rate","count","onClick","type","payload","Category","match","params","useSWR","map","idx","key","Header","children","Card","card","onChange","e","Object","is","NaN","parseInt","target","value","changeCount","remove","cardCtx","createContext","useContext","App","useReducer","state","action","find","val","filter","Provider","to","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc156dfe.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const fetcher = (url: string) => axios.get(url).then(res => res.data)","import React from 'react'\r\nimport { FaStar } from \"react-icons/fa\";\r\n\r\nconst Stars: React.FunctionComponent<{\r\n    rating: number\r\n}>\r\n    = ({ rating }) => {\r\n\r\n        return (\r\n            <div className={`flex items-center`}>\r\n                <p>{rating}</p>\r\n                <FaStar className={`text-yellow-400`} />\r\n                <FaStar className={`text-yellow-400`} />\r\n                <FaStar className={`text-yellow-400`} />\r\n                <FaStar className={`text-yellow-400`} />\r\n                <FaStar className={`text-gray-400`} />\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default Stars\r\n","import React from 'react'\r\nimport { useCard } from '../App'\r\nimport Stars from './Stars'\r\n\r\nexport interface IProduct {\r\n    category: string,\r\n    description: string,\r\n    id: number,\r\n    image: string,\r\n    price: number,\r\n    rating: {\r\n        rate: number,\r\n        count: number\r\n    },\r\n    title: string\r\n}\r\n\r\n\r\nconst Product = ({\r\n    category,\r\n    description,\r\n    id,\r\n    image,\r\n    price,\r\n    rating,\r\n    title,\r\n}: IProduct) => {\r\n    const { dispatch } = useCard()\r\n    const product = {\r\n        id: id,\r\n        category: category,\r\n        description: description,\r\n        image: image,\r\n        price: price,\r\n        rating: rating,\r\n        title: title\r\n    }\r\n    const addToCard = () => {\r\n        dispatch({\r\n            type: \"ADD\", payload: {\r\n                product: product,\r\n                count: 1\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={`rounded-xl space-y-2 border-b p-2 sm:w-1/2 xl:w-1/3 h-40 flex justify-center`}>\r\n\r\n            <img className={`w-32`} src={image} alt=\"title\" />\r\n            <div className={`flex flex-col p-2`}>\r\n                {/*category*/}\r\n                <p className=\"font-bold text-sm\">{title}</p>\r\n                {/* <p>{description}</p> */}\r\n                <p className={`text-2xl font-bold`}>{price} z≈Ç</p>\r\n                <div className={`flex justify-between items-end`}>\r\n                    <div className={''}>{<Stars rating={rating.rate} />}<div className={`text-sm opacity-70`}>{rating.count} buyers</div></div>\r\n                    <button onClick={addToCard} className={` border-b p-2 shadow font-bold text-sm text-gray-700`}>ADD TO CARD</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { RouteComponentProps } from 'react-router'\r\nimport useSWR from 'swr'\r\nimport { fetcher } from '../lib/fetcher'\r\nimport Product, { IProduct } from './Product'\r\n\r\ninterface IParams {\r\n    category: string\r\n}\r\n\r\n\r\nconst Category = ({ match }: RouteComponentProps<IParams>) => {\r\n    const category = match.params.category\r\n\r\n    const { data } = useSWR(`https://fakestoreapi.com/products/category/${category}`, fetcher)\r\n    if (!data) return <p>loading</p>\r\n\r\n    return (\r\n        <div className={`container flex  mx-auto flex-wrap`}>\r\n            {data.map((product: IProduct, idx: number) => {\r\n                return (\r\n                    <Product {...product} key={idx}></Product>\r\n                )\r\n            })}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Category\r\n","import React from 'react'\r\n\r\nconst Header = ({ children }: { children: React.ReactNode }) => {\r\n    return (\r\n        <div className={` bg-blue-900`}>\r\n            <div className={`h-16 px-4 space-x-4 container mx-auto text-white flex flex-nowrap  items-center justify-between  `}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { ICard, useCard } from '../App'\r\nimport { IProduct } from './Product'\r\n\r\nconst Card = () => {\r\n    const { card, dispatch } = useCard()\r\n\r\n\r\n    const remove = (product: IProduct) => {\r\n        dispatch({\r\n            type: \"REMOVE\", payload: {\r\n                product: product,\r\n                count: 1\r\n            }\r\n        })\r\n    }\r\n    const changeCount = (product: ICard, e: React.ChangeEvent<HTMLInputElement>) => {\r\n\r\n        dispatch({\r\n            type: \"CHANGE\", payload: {\r\n                product: product.product,\r\n                count: Object.is(NaN, parseInt(e.target.value)) ? 0 : parseInt(e.target.value)\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            {card.map((product, idx) => {\r\n\r\n                return (\r\n                    <div key={idx} className={`flex space-x-2`}><input className={`w-10`} onChange={(e) => changeCount(product, e)} value={product.count} type=\"number\"></input><p>x {product.product.title} </p><button onClick={() => remove(product.product)}>remove</button></div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React, { createContext, useContext, useReducer } from \"react\";\r\nimport useSWR from \"swr\";\r\nimport {\r\n    HashRouter,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Category from \"./components/Category\";\r\nimport { fetcher } from \"./lib/fetcher\";\r\nimport Header from \"./components/Header\";\r\nimport { IProduct } from \"./components/Product\";\r\nimport Card from \"./components/Card\";\r\n\r\n\r\nexport interface ICard {\r\n    product: IProduct\r\n    count: number\r\n\r\n}\r\n\r\ninterface IAction {\r\n    type: \"ADD\" | \"REMOVE\" | \"CHANGE\",\r\n    payload: {\r\n        product: IProduct\r\n        count: number\r\n    }\r\n}\r\ninterface ctx {\r\n    card: ICard[],\r\n    dispatch: React.Dispatch<IAction>\r\n}\r\n\r\nconst cardCtx = createContext<ctx>({ card: [], dispatch: () => [] })\r\n\r\nfunction App() {\r\n\r\n\r\n    const [card, dispatch] = useReducer((state: ICard[], action: IAction) => {\r\n        switch (action.type) {\r\n            case 'ADD':\r\n                if (state.find(({ product }) => product.id === action.payload.product.id)) {\r\n\r\n                    return [...state.map((val) => {\r\n                        if (val.product.id === action.payload.product.id) {\r\n\r\n                            val.count++\r\n\r\n                        }\r\n                        return val\r\n\r\n                    })]\r\n                }\r\n                return [...state, { product: action.payload.product, count: action.payload.count }]\r\n            case 'REMOVE':\r\n                return [...state.filter(({ product }) => product.id !== action.payload.product.id)]\r\n            case 'CHANGE':\r\n\r\n                return [...state.map((val) => {\r\n                    if (val.product.id === action.payload.product.id) {\r\n                        val.count = action.payload.count\r\n                    }\r\n                    return val\r\n\r\n                })]\r\n\r\n            default:\r\n                return []\r\n        }\r\n    }, [])\r\n\r\n    const { data } = useSWR<string[]>('https://fakestoreapi.com/products/categories', fetcher)\r\n    if (!data) return <>loading</>\r\n\r\n    return (\r\n        <>\r\n            <cardCtx.Provider value={{ card, dispatch }}>\r\n                <HashRouter>\r\n                    <Header>\r\n                        {data.map((category, idx) => {\r\n                            return (\r\n                                <Link className={` border-b sm:p-2`} to={category} key={idx} >{category} </Link>\r\n                            )\r\n                        })}\r\n                    </Header>\r\n\r\n                    <Route path='/:category' component={Category} /> {/*temporary for production */}\r\n                </HashRouter>\r\n                <Card />\r\n            </cardCtx.Provider >\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport const useCard = () => useContext(cardCtx)\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n\n  <App />\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}